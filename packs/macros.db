{"name":"Gerar Trabalho","type":"script","author":"tnmjg5BEY2dKOg7l","img":"icons/skills/targeting/crosshair-triple-strike-orange.webp","scope":"global","command":"/* - v1.0\nSource:\nIcon: \nIcon2: icons/environment/people/commoner.webp\n*/\n\n(async () => {\n  const faction1 = await drawFromTable('Facções');\n  const faction2 = await drawFromTable('Facções');\n  const client = await drawFromTable('Cliente/Alvo');\n  const target = await drawFromTable('Cliente/Alvo');\n  const twist = await drawFromTable('Reviravolta ou Complicação');\n  const place = await drawFromTable('Local da Tarefa');\n  const task = await drawFromTable('Tarefa');\n  const connection = await drawFromTable('Conexão');\n\n  let msg = `<h2>Trabalho</h2>`;\n  msg += `<ul><li>Facção 1: <b>${faction1}</b></li>`;\n  msg += `<li>Facção 2: <b>${faction2}</b></li>`;\n  msg += `<li>Cliente: <b>${client}</b></li>`;\n  msg += `<li>Alvo: <b>${target}</b></li>`;\n  msg += `<li>Reviravolta ou Complicação: <b>${twist}</b></li>`;\n  msg += `<li>Local da Tarefa: <b>${place}</b></li>`;\n  msg += `<li>Tarefa: <b>${task}</b></li>`;\n  msg += `<li>Conexão: <b>${connection}</b></li></ul>`;\n\n  let message=msg;\n\n  let data = {\n    name: `${task}`,\n    content: msg\n  };\n  addEventListenerOnHtmlElement(\"#createNPC\", 'click', (e) => {    \n    createNPC(data);    \n  });          \n  \n  message+=`<button style=\"background:#d10000;color:white\" id=\"createNPC\">Criar</button>`;\n  \n  let chatData = {\n    content: message,\n    whisper : ChatMessage.getWhisperRecipients(\"GM\")\n  };  \n  ChatMessage.create(chatData, {});  \n\n})()\n\n/* Functions */\nasync function drawFromTable(tableName) {\n\n  let list_compendium = await game.packs.filter(p=>p.documentName=='RollTable');      \n  let inside = await list_compendium.filter( p=>p.metadata.label=='Tabelas' )[0].getDocuments();      \n  const table = await inside.filter( p=>p.name==tableName )[0];          \n  \n  if (!table) {\n    ui.notifications.warn(`Table ${tableName} not found.`, {});\n    return;\n  }\n  const output = await table.roll();\n  const result = output.results[0].data.text;\n  return result;  \n}\n\nfunction addEventListenerOnHtmlElement(element, event, func){    \n    Hooks.once(\"renderChatMessage\", (chatItem, html) => { // Use Hook to add event to chat message html element\n        html[0].querySelector(element).addEventListener(event, func);        \n    });\n} // end addEventListenerOnHtmlElement\n\nasync function createNPC(data) {  \n  const instantAdventure = await JournalEntry.create(data);\n  await instantAdventure.sheet.render(true);    \n}","folder":null,"sort":0,"permission":{"default":0,"tnmjg5BEY2dKOg7l":3},"flags":{"core":{"sourceId":"Macro.mlPV7sbRYrIcEKIU"}},"_id":"pym7VbLd9qtPHft6"}
{"$$deleted":true,"_id":"pym7VbLd9qtPHft6"}
{"name":"Gerar Trabalho (Atualiza Sozinha)","type":"script","author":"tnmjg5BEY2dKOg7l","img":"icons/skills/targeting/crosshair-triple-strike-orange.webp","scope":"global","command":"macroRun('Gerar Trabalho');\n\nasync function macroRun(macroName, compendiumName='scum-and-villainy-pt-br.macros') {  \n  let pack = game.packs.get(compendiumName);\n  let macro = ( await pack.getDocuments() ).find(i => (i.data.name==macroName) );\n  await macro.execute();    \n}","folder":null,"sort":0,"permission":{"default":0,"tnmjg5BEY2dKOg7l":3},"flags":{"core":{"sourceId":"Macro.f5oQ2B6M7o4TCs58"}},"_id":"UnHMRKjR2hJrPN9r"}
{"name":"Gerar Trabalho","type":"script","author":"tnmjg5BEY2dKOg7l","img":"icons/svg/dice-target.svg","scope":"global","command":"/* - v1.0\nSource:\nIcon: \nIcon2: icons/environment/people/commoner.webp\n*/\n\n(async () => {\n  const faction1 = await drawFromTable('Facções');\n  const faction2 = await drawFromTable('Facções');\n  const client = await drawFromTable('Cliente/Alvo');\n  const target = await drawFromTable('Cliente/Alvo');\n  const twist = await drawFromTable('Reviravolta ou Complicação');\n  const place = await drawFromTable('Local da Tarefa');\n  const task = await drawFromTable('Tarefa');\n  const connection = await drawFromTable('Conexão');\n\n  let msg = `<h2>Trabalho</h2>`;\n  msg += `<ul><li>Facção 1: <b>${faction1}</b></li>`;\n  msg += `<li>Facção 2: <b>${faction2}</b></li>`;\n  msg += `<li>Cliente: <b>${client}</b></li>`;\n  msg += `<li>Alvo: <b>${target}</b></li>`;\n  msg += `<li>Reviravolta ou Complicação: <b>${twist}</b></li>`;\n  msg += `<li>Local da Tarefa: <b>${place}</b></li>`;\n  msg += `<li>Tarefa: <b>${task}</b></li>`;\n  msg += `<li>Conexão: <b>${connection}</b></li></ul>`;\n\n  let message=msg;\n\n  let data = {\n    name: `${task}`,\n    content: msg\n  };\n  addEventListenerOnHtmlElement(\"#createNPC\", 'click', (e) => {    \n    createNPC(data);    \n  });          \n  \n  message+=`<button style=\"background:#d10000;color:white\" id=\"createNPC\">Criar</button>`;\n  \n  let chatData = {\n    content: message,\n    whisper : ChatMessage.getWhisperRecipients(\"GM\")\n  };  \n  ChatMessage.create(chatData, {});  \n\n})()\n\n/* Functions */\nasync function drawFromTable(tableName) {\n\n  let list_compendium = await game.packs.filter(p=>p.documentName=='RollTable');      \n  let inside = await list_compendium.filter( p=>p.metadata.label=='Tabelas' )[0].getDocuments();      \n  const table = await inside.filter( p=>p.name==tableName )[0];          \n  \n  if (!table) {\n    ui.notifications.warn(`Table ${tableName} not found.`, {});\n    return;\n  }\n  const output = await table.roll();\n  const result = output.results[0].data.text;\n  return result;  \n}\n\nfunction addEventListenerOnHtmlElement(element, event, func){    \n    Hooks.once(\"renderChatMessage\", (chatItem, html) => { // Use Hook to add event to chat message html element\n        html[0].querySelector(element).addEventListener(event, func);        \n    });\n} // end addEventListenerOnHtmlElement\n\nasync function createNPC(data) {  \n  const instantAdventure = await JournalEntry.create(data);\n  await instantAdventure.sheet.render(true);    \n}","folder":null,"sort":0,"permission":{"default":0,"tnmjg5BEY2dKOg7l":3},"flags":{"core":{"sourceId":"Macro.mlPV7sbRYrIcEKIU"}},"_id":"HYulNjQMDFQqywlO"}
